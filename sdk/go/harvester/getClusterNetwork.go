// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package harvester

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/huaxk/pulumi-harvester/sdk/go/harvester"
// 	"github.com/pulumi/pulumi-harvester/sdk/go/harvester"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := harvester.LookupClusterNetwork(ctx, &GetClusterNetworkArgs{
// 			Name: "vlan",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupClusterNetwork(ctx *pulumi.Context, args *LookupClusterNetworkArgs, opts ...pulumi.InvokeOption) (*LookupClusterNetworkResult, error) {
	var rv LookupClusterNetworkResult
	err := ctx.Invoke("harvester:index/getClusterNetwork:getClusterNetwork", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusterNetwork.
type LookupClusterNetworkArgs struct {
	// A unique name
	Name string `pulumi:"name"`
}

// A collection of values returned by getClusterNetwork.
type LookupClusterNetworkResult struct {
	DefaultPhysicalNic string `pulumi:"defaultPhysicalNic"`
	// Any text you want that better describes this resource
	Description string `pulumi:"description"`
	Enable      bool   `pulumi:"enable"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A unique name
	Name  string                 `pulumi:"name"`
	State string                 `pulumi:"state"`
	Tags  map[string]interface{} `pulumi:"tags"`
}

func LookupClusterNetworkOutput(ctx *pulumi.Context, args LookupClusterNetworkOutputArgs, opts ...pulumi.InvokeOption) LookupClusterNetworkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupClusterNetworkResult, error) {
			args := v.(LookupClusterNetworkArgs)
			r, err := LookupClusterNetwork(ctx, &args, opts...)
			var s LookupClusterNetworkResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupClusterNetworkResultOutput)
}

// A collection of arguments for invoking getClusterNetwork.
type LookupClusterNetworkOutputArgs struct {
	// A unique name
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupClusterNetworkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterNetworkArgs)(nil)).Elem()
}

// A collection of values returned by getClusterNetwork.
type LookupClusterNetworkResultOutput struct{ *pulumi.OutputState }

func (LookupClusterNetworkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterNetworkResult)(nil)).Elem()
}

func (o LookupClusterNetworkResultOutput) ToLookupClusterNetworkResultOutput() LookupClusterNetworkResultOutput {
	return o
}

func (o LookupClusterNetworkResultOutput) ToLookupClusterNetworkResultOutputWithContext(ctx context.Context) LookupClusterNetworkResultOutput {
	return o
}

func (o LookupClusterNetworkResultOutput) DefaultPhysicalNic() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterNetworkResult) string { return v.DefaultPhysicalNic }).(pulumi.StringOutput)
}

// Any text you want that better describes this resource
func (o LookupClusterNetworkResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterNetworkResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupClusterNetworkResultOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupClusterNetworkResult) bool { return v.Enable }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupClusterNetworkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterNetworkResult) string { return v.Id }).(pulumi.StringOutput)
}

// A unique name
func (o LookupClusterNetworkResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterNetworkResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupClusterNetworkResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterNetworkResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupClusterNetworkResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupClusterNetworkResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterNetworkResultOutput{})
}
