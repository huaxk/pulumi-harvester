// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package harvester

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/huaxk/pulumi-harvester/sdk/go/harvester"
// 	"github.com/pulumi/pulumi-harvester/sdk/go/harvester"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := harvester.LookupVirtualMachine(ctx, &GetVirtualMachineArgs{
// 			Name:      "ubuntu-dev",
// 			Namespace: pulumi.StringRef("default"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupVirtualMachine(ctx *pulumi.Context, args *LookupVirtualMachineArgs, opts ...pulumi.InvokeOption) (*LookupVirtualMachineResult, error) {
	var rv LookupVirtualMachineResult
	err := ctx.Invoke("harvester:index/getVirtualMachine:getVirtualMachine", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualMachine.
type LookupVirtualMachineArgs struct {
	// A unique name
	Name      string  `pulumi:"name"`
	Namespace *string `pulumi:"namespace"`
}

// A collection of values returned by getVirtualMachine.
type LookupVirtualMachineResult struct {
	Cloudinits []GetVirtualMachineCloudinit `pulumi:"cloudinits"`
	Cpu        int                          `pulumi:"cpu"`
	// Any text you want that better describes this resource
	Description string                  `pulumi:"description"`
	Disks       []GetVirtualMachineDisk `pulumi:"disks"`
	Hostname    string                  `pulumi:"hostname"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	MachineType string `pulumi:"machineType"`
	Memory      string `pulumi:"memory"`
	// A unique name
	Name              string                              `pulumi:"name"`
	Namespace         *string                             `pulumi:"namespace"`
	NetworkInterfaces []GetVirtualMachineNetworkInterface `pulumi:"networkInterfaces"`
	NodeName          string                              `pulumi:"nodeName"`
	SshKeys           []string                            `pulumi:"sshKeys"`
	Start             bool                                `pulumi:"start"`
	State             string                              `pulumi:"state"`
	Tags              map[string]interface{}              `pulumi:"tags"`
}

func LookupVirtualMachineOutput(ctx *pulumi.Context, args LookupVirtualMachineOutputArgs, opts ...pulumi.InvokeOption) LookupVirtualMachineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVirtualMachineResult, error) {
			args := v.(LookupVirtualMachineArgs)
			r, err := LookupVirtualMachine(ctx, &args, opts...)
			var s LookupVirtualMachineResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVirtualMachineResultOutput)
}

// A collection of arguments for invoking getVirtualMachine.
type LookupVirtualMachineOutputArgs struct {
	// A unique name
	Name      pulumi.StringInput    `pulumi:"name"`
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (LookupVirtualMachineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualMachineArgs)(nil)).Elem()
}

// A collection of values returned by getVirtualMachine.
type LookupVirtualMachineResultOutput struct{ *pulumi.OutputState }

func (LookupVirtualMachineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualMachineResult)(nil)).Elem()
}

func (o LookupVirtualMachineResultOutput) ToLookupVirtualMachineResultOutput() LookupVirtualMachineResultOutput {
	return o
}

func (o LookupVirtualMachineResultOutput) ToLookupVirtualMachineResultOutputWithContext(ctx context.Context) LookupVirtualMachineResultOutput {
	return o
}

func (o LookupVirtualMachineResultOutput) Cloudinits() GetVirtualMachineCloudinitArrayOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) []GetVirtualMachineCloudinit { return v.Cloudinits }).(GetVirtualMachineCloudinitArrayOutput)
}

func (o LookupVirtualMachineResultOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) int { return v.Cpu }).(pulumi.IntOutput)
}

// Any text you want that better describes this resource
func (o LookupVirtualMachineResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupVirtualMachineResultOutput) Disks() GetVirtualMachineDiskArrayOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) []GetVirtualMachineDisk { return v.Disks }).(GetVirtualMachineDiskArrayOutput)
}

func (o LookupVirtualMachineResultOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.Hostname }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVirtualMachineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVirtualMachineResultOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.MachineType }).(pulumi.StringOutput)
}

func (o LookupVirtualMachineResultOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.Memory }).(pulumi.StringOutput)
}

// A unique name
func (o LookupVirtualMachineResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupVirtualMachineResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o LookupVirtualMachineResultOutput) NetworkInterfaces() GetVirtualMachineNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) []GetVirtualMachineNetworkInterface { return v.NetworkInterfaces }).(GetVirtualMachineNetworkInterfaceArrayOutput)
}

func (o LookupVirtualMachineResultOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.NodeName }).(pulumi.StringOutput)
}

func (o LookupVirtualMachineResultOutput) SshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) []string { return v.SshKeys }).(pulumi.StringArrayOutput)
}

func (o LookupVirtualMachineResultOutput) Start() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) bool { return v.Start }).(pulumi.BoolOutput)
}

func (o LookupVirtualMachineResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupVirtualMachineResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVirtualMachineResultOutput{})
}
