// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harvester
{
    /// <summary>
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import harvester:index/network:Network foo &lt;Namespace&gt;/&lt;Name&gt;
    /// ```
    /// </summary>
    [HarvesterResourceType("harvester:index/network:Network")]
    public partial class Network : Pulumi.CustomResource
    {
        [Output("config")]
        public Output<string> Config { get; private set; } = null!;

        /// <summary>
        /// Any text you want that better describes this resource
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A unique name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("namespace")]
        public Output<string?> Namespace { get; private set; } = null!;

        /// <summary>
        /// e.g. 172.16.0.1/24
        /// </summary>
        [Output("routeCidr")]
        public Output<string?> RouteCidr { get; private set; } = null!;

        [Output("routeConnectivity")]
        public Output<string> RouteConnectivity { get; private set; } = null!;

        [Output("routeDhcpServerIp")]
        public Output<string?> RouteDhcpServerIp { get; private set; } = null!;

        /// <summary>
        /// e.g. 172.16.0.1
        /// </summary>
        [Output("routeGateway")]
        public Output<string?> RouteGateway { get; private set; } = null!;

        [Output("routeMode")]
        public Output<string?> RouteMode { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        /// <summary>
        /// e.g. 1-4094
        /// </summary>
        [Output("vlanId")]
        public Output<int> VlanId { get; private set; } = null!;


        /// <summary>
        /// Create a Network resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Network(string name, NetworkArgs args, CustomResourceOptions? options = null)
            : base("harvester:index/network:Network", name, args ?? new NetworkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Network(string name, Input<string> id, NetworkState? state = null, CustomResourceOptions? options = null)
            : base("harvester:index/network:Network", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Network resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Network Get(string name, Input<string> id, NetworkState? state = null, CustomResourceOptions? options = null)
        {
            return new Network(name, id, state, options);
        }
    }

    public sealed class NetworkArgs : Pulumi.ResourceArgs
    {
        [Input("config")]
        public Input<string>? Config { get; set; }

        /// <summary>
        /// Any text you want that better describes this resource
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A unique name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// e.g. 172.16.0.1/24
        /// </summary>
        [Input("routeCidr")]
        public Input<string>? RouteCidr { get; set; }

        [Input("routeDhcpServerIp")]
        public Input<string>? RouteDhcpServerIp { get; set; }

        /// <summary>
        /// e.g. 172.16.0.1
        /// </summary>
        [Input("routeGateway")]
        public Input<string>? RouteGateway { get; set; }

        [Input("routeMode")]
        public Input<string>? RouteMode { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// e.g. 1-4094
        /// </summary>
        [Input("vlanId", required: true)]
        public Input<int> VlanId { get; set; } = null!;

        public NetworkArgs()
        {
        }
    }

    public sealed class NetworkState : Pulumi.ResourceArgs
    {
        [Input("config")]
        public Input<string>? Config { get; set; }

        /// <summary>
        /// Any text you want that better describes this resource
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A unique name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// e.g. 172.16.0.1/24
        /// </summary>
        [Input("routeCidr")]
        public Input<string>? RouteCidr { get; set; }

        [Input("routeConnectivity")]
        public Input<string>? RouteConnectivity { get; set; }

        [Input("routeDhcpServerIp")]
        public Input<string>? RouteDhcpServerIp { get; set; }

        /// <summary>
        /// e.g. 172.16.0.1
        /// </summary>
        [Input("routeGateway")]
        public Input<string>? RouteGateway { get; set; }

        [Input("routeMode")]
        public Input<string>? RouteMode { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// e.g. 1-4094
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        public NetworkState()
        {
        }
    }
}
