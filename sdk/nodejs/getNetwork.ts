// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as harvester from "@pulumi/harvester";
 *
 * const vlan1 = pulumi.output(harvester.getNetwork({
 *     name: "vlan1",
 *     namespace: "harvester-public",
 * }));
 * ```
 */
export function getNetwork(args: GetNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("harvester:index/getNetwork:getNetwork", {
        "name": args.name,
        "namespace": args.namespace,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetwork.
 */
export interface GetNetworkArgs {
    /**
     * A unique name
     */
    name: string;
    namespace?: string;
}

/**
 * A collection of values returned by getNetwork.
 */
export interface GetNetworkResult {
    readonly config: string;
    /**
     * Any text you want that better describes this resource
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A unique name
     */
    readonly name: string;
    readonly namespace?: string;
    /**
     * e.g. 172.16.0.1/24
     */
    readonly routeCidr: string;
    readonly routeConnectivity: string;
    readonly routeDhcpServerIp: string;
    /**
     * e.g. 172.16.0.1
     */
    readonly routeGateway: string;
    readonly routeMode: string;
    readonly state: string;
    readonly tags: {[key: string]: any};
    /**
     * e.g. 1-4094
     */
    readonly vlanId: number;
}

export function getNetworkOutput(args: GetNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkResult> {
    return pulumi.output(args).apply(a => getNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getNetwork.
 */
export interface GetNetworkOutputArgs {
    /**
     * A unique name
     */
    name: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
}
