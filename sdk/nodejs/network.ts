// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * ```sh
 *  $ pulumi import harvester:index/network:Network foo <Namespace>/<Name>
 * ```
 */
export class Network extends pulumi.CustomResource {
    /**
     * Get an existing Network resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkState, opts?: pulumi.CustomResourceOptions): Network {
        return new Network(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'harvester:index/network:Network';

    /**
     * Returns true if the given object is an instance of Network.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Network {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Network.__pulumiType;
    }

    public readonly config!: pulumi.Output<string>;
    /**
     * Any text you want that better describes this resource
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A unique name
     */
    public readonly name!: pulumi.Output<string>;
    public readonly namespace!: pulumi.Output<string | undefined>;
    /**
     * e.g. 172.16.0.1/24
     */
    public readonly routeCidr!: pulumi.Output<string | undefined>;
    public /*out*/ readonly routeConnectivity!: pulumi.Output<string>;
    public readonly routeDhcpServerIp!: pulumi.Output<string | undefined>;
    /**
     * e.g. 172.16.0.1
     */
    public readonly routeGateway!: pulumi.Output<string | undefined>;
    public readonly routeMode!: pulumi.Output<string | undefined>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * e.g. 1-4094
     */
    public readonly vlanId!: pulumi.Output<number>;

    /**
     * Create a Network resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkArgs | NetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkState | undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["routeCidr"] = state ? state.routeCidr : undefined;
            resourceInputs["routeConnectivity"] = state ? state.routeConnectivity : undefined;
            resourceInputs["routeDhcpServerIp"] = state ? state.routeDhcpServerIp : undefined;
            resourceInputs["routeGateway"] = state ? state.routeGateway : undefined;
            resourceInputs["routeMode"] = state ? state.routeMode : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vlanId"] = state ? state.vlanId : undefined;
        } else {
            const args = argsOrState as NetworkArgs | undefined;
            if ((!args || args.vlanId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vlanId'");
            }
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["routeCidr"] = args ? args.routeCidr : undefined;
            resourceInputs["routeDhcpServerIp"] = args ? args.routeDhcpServerIp : undefined;
            resourceInputs["routeGateway"] = args ? args.routeGateway : undefined;
            resourceInputs["routeMode"] = args ? args.routeMode : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vlanId"] = args ? args.vlanId : undefined;
            resourceInputs["routeConnectivity"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Network.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Network resources.
 */
export interface NetworkState {
    config?: pulumi.Input<string>;
    /**
     * Any text you want that better describes this resource
     */
    description?: pulumi.Input<string>;
    /**
     * A unique name
     */
    name?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    /**
     * e.g. 172.16.0.1/24
     */
    routeCidr?: pulumi.Input<string>;
    routeConnectivity?: pulumi.Input<string>;
    routeDhcpServerIp?: pulumi.Input<string>;
    /**
     * e.g. 172.16.0.1
     */
    routeGateway?: pulumi.Input<string>;
    routeMode?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * e.g. 1-4094
     */
    vlanId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Network resource.
 */
export interface NetworkArgs {
    config?: pulumi.Input<string>;
    /**
     * Any text you want that better describes this resource
     */
    description?: pulumi.Input<string>;
    /**
     * A unique name
     */
    name?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    /**
     * e.g. 172.16.0.1/24
     */
    routeCidr?: pulumi.Input<string>;
    routeDhcpServerIp?: pulumi.Input<string>;
    /**
     * e.g. 172.16.0.1
     */
    routeGateway?: pulumi.Input<string>;
    routeMode?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * e.g. 1-4094
     */
    vlanId: pulumi.Input<number>;
}
